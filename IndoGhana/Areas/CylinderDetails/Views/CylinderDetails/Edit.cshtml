@model CylnderEntities.usp_CylinderMasterGetByID_Result

@{
    ViewBag.Title = "Cylinder Details";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<script>
    $(document).ready(function () {
        $('#VendorID').change(function () {
            //alert('vendor');
            debugger;
            if (document.getElementById('VendorID').value != "") {
                $('#VendorBranchID').empty();
                fillDropdown($('#VendorBranchID'), '@Url.Action("getBranch")', document.getElementById('VendorID').value);
            }
        });

    });
</script>
<div class="container" style="margin-top:50px;">
    <div class="row">
        <div class="col-md-4 col-lg-4  col-xs-12">
            <h4> @Html.ActionLink("Back to Cylinder List", "Index") </h4>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-lg-10 col-xs-12">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Edit Cylider Details</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <lable class="control-label col-md-2">Barcode</lable>
                        <div class="col-md-6 col-lg-6  col-xs-12">
                         @if (Model.Path != null && Model.Path != "")
                         {
                            <img src="@Url.Content(Model.Path)" style="width:192px;height:192px;" />
                            @*<img src="~/Images/print.png" id="prnbarcode" />*@
                            
                            @Html.ActionLink("Print Barcode", "printbarcode", new { cylindernumber = Model.CylindeNumber }, htmlAttributes: new { @class = "btn btn-primary" })
                         }
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CylinderID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.CylinderID, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DisplayFor(model => model.CylinderID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CylinderID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CylindeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.CylindeNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CylindeNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                        @Html.DisplayFor(model => model.Barcode)
                                @*@Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.ManufacturerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.ManufacturerName, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.ManufacturerID, ViewBag.ManufacturerID as List<SelectListItem>, "Select Manufacturer")
                            @Html.ValidationMessageFor(model => model.ManufacturerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.PurchaseDate, new { type = "date" })
                            @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.InitialGas, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.InitialGas, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.InitialGasID, ViewBag.InitialGasID as List<SelectListItem>, "Select Initial Gas")
                            @Html.ValidationMessageFor(model => model.InitialGas, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WLCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-lg-6  col-xs-12">
                            <div class="col-md-3 col-lg-3  col-xs-12">
                                
                                @Html.EditorFor(model => model.WLCapacity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WLCapacity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 col-lg-3  col-xs-12">
                                @Html.DropDownListFor(model => model.WLCapacityUOMID, ViewBag.WLCapacityUOMID as List<SelectListItem>, "Select UOM", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WLCapacityUOM, "", new { @class = "text-danger" })
                            </div>
                            </div>
                    </div>



                    @*<div class="form-group">
                            @Html.LabelFor(model => model.WLCapacityUOM, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 col-lg-4  col-xs-12">



                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.WorkingPressure, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.WorkingPressure, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WorkingPressure, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.WorkingPressureUOM, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.WorkingPressureUOM, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.WorkingPressureUOMID, ViewBag.WorkingPressureUOMID as List<SelectListItem>, "Select Location")
                            @Html.ValidationMessageFor(model => model.WorkingPressureUOM, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TestDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.TestDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TestDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NextTestDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.NextTestDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NextTestDate, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.ValveModel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.ValveModel, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.ValveModelID, ViewBag.ValveModelID as List<SelectListItem>, "Select Valve model")
                            
                            @Html.ValidationMessageFor(model => model.ValveModel, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.PresentState, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.PresentState, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.PresentStateID, ViewBag.PresentStateID as List<SelectListItem>, "Select Present State")
                            @Html.ValidationMessageFor(model => model.PresentState, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.GasInUse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.DropDownListFor(model => model.GasInUseID, ViewBag.GasInUseID as List<SelectListItem>, "Select Gas In Use")
                            @*@Html.EditorFor(model => model.GasInUse, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.GasInUse, "", new { @class = "text-danger" })
                        </div>
                    </div>





                    <div class="form-group">
                        @Html.LabelFor(model => model.VendorName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.VendorID, ViewBag.VendorID as List<SelectListItem>, "Select Vendor Name", htmlAttributes: new { @class = "dropdown" })
                            @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                            @Html.DropDownListFor(model => model.VendorBranchID, ViewBag.VendorBranchID as List<SelectListItem>, "Select Branch Name", htmlAttributes: new { @class = "dropdown" })
                            @Html.ValidationMessageFor(model => model.VendorBranchName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.SizeUOM, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.SizeUOM, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.SizeUOMID, ViewBag.SizeUOMID as List<SelectListItem>, "Select UOM")
                            @Html.ValidationMessageFor(model => model.SizeUOM, "", new { @class = "text-danger" })
                        </div>
                    </div>





                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.LabelFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DisplayFor(model => model.CustomerName)


                            @*@Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentDeliveryDate, new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.DisplayFor(model => model.CurrentDeliveryDate)
                            @*@Html.EditorFor(model => model.CurrentDeliveryDate, new { type = "date" })*@
                            @Html.ValidationMessageFor(model => model.CurrentDeliveryDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentRecieveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.CurrentRecieveDate, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DisplayFor(model => model.CurrentRecieveDate)

                            @Html.ValidationMessageFor(model => model.CurrentRecieveDate, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @*@Html.EditorFor(model => model.CurrentLocation, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model => model.CurrentLocationID, ViewBag.CurrentLocationID as List<SelectListItem>, "Select Location")
                            @Html.ValidationMessageFor(model => model.CurrentLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    @*<div class="form-group">
                            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 col-lg-4  col-xs-12">
                                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                            </div>
                        </div>*@



                    @*<div class="form-group">
                            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 col-lg-4  col-xs-12">
                                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 col-lg-4  col-xs-12">
                                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>*@



                    @*<div class="form-group">
                            @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 col-lg-4  col-xs-12">
                                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UpdatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 col-lg-4  col-xs-12">
                                @Html.EditorFor(model => model.UpdatedOn, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UpdatedOn, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-lg-4  col-xs-12">
                            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-4 col-lg-4  col-xs-12">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
